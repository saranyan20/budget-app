{"version":3,"sources":["webpack:///./src/views/ExpenseManager/ExpenseManager.vue?78c1","webpack:///./src/views/ExpenseManager/queries.js","webpack:///src/views/ExpenseManager/ExpenseManager.vue","webpack:///./src/views/ExpenseManager/ExpenseManager.vue?7f26","webpack:///./src/views/ExpenseManager/ExpenseManager.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","selectedYear","yearOptions","on","$event","selectedMonth","monthOptions","applyFilter","clearFilter","getIndianFormat","totalBalance","totalIncome","totalSavings","staticStyle","addItem","staticClass","_s","filteredIncomeList","fields","setCurrentItems","scopedSlots","_u","key","fn","ref","item","directives","name","rawName","value","content","placement","expression","viewBudgetDetails","totalExpense","filteredExpenseList","budget","type","modal","category","incomeCategoryOptions","expenseCategoryOptions","view","$set","description","amount","insertBudgetDetails","staticRenderFns","GET_CATEGORIES","gql","GET_BUDGET_DETAILS","GET_MONTHLY_SAVINGS","INSERT_BUDGET_DETAILS","INSERT_MONTHLY_SAVINGS","component"],"mappings":"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","file":"js/chunk-2d21de52.9b8823ed.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('CCard',[_c('CCardHeader',[_c('h5',[_vm._v(\"Budget Manager\")])]),_c('CCardBody',[_c('CRow',[_c('CCol',{attrs:{\"sm\":\"1\"}},[_vm._v(\" Filter: \")]),_c('CCol',{attrs:{\"sm\":\"3\"}},[_c('CSelect',{attrs:{\"placeholder\":\"Select a year\",\"value\":_vm.selectedYear,\"options\":_vm.yearOptions},on:{\"update:value\":function($event){_vm.selectedYear=$event}}})],1),_c('CCol',{attrs:{\"sm\":\"3\"}},[_c('CSelect',{attrs:{\"placeholder\":\"Select a month\",\"value\":_vm.selectedMonth,\"options\":_vm.monthOptions},on:{\"update:value\":function($event){_vm.selectedMonth=$event}}})],1),_c('CCol',{attrs:{\"sm\":\"1\"}},[_c('CButton',{attrs:{\"color\":\"secondary\"},on:{\"click\":_vm.applyFilter}},[_vm._v(\"Apply\")])],1),_c('CCol',{attrs:{\"sm\":\"1\"}},[_c('CButton',{attrs:{\"color\":\"dark\"},on:{\"click\":_vm.clearFilter}},[_vm._v(\"Clear\")])],1)],1),_c('CRow',[_c('CCol',{attrs:{\"col\":\"12\",\"sm\":\"6\"}},[_c('CWidgetProgressIcon',{attrs:{\"header\":(\"\" + (_vm.getIndianFormat(_vm.totalBalance))),\"text\":\"Available Balance\",\"color\":\"info\",\"value\":(_vm.totalBalance / _vm.totalIncome) * 100}})],1),_c('CCol',{attrs:{\"col\":\"12\",\"sm\":\"6\"}},[_c('CWidgetProgressIcon',{attrs:{\"header\":(\"\" + (_vm.getIndianFormat(_vm.totalSavings))),\"text\":\"Total Savings\",\"color\":\"info\",\"value\":(_vm.totalBalance / _vm.totalIncome) * 100}})],1)],1),_c('CRow',[_c('CCol',[_c('CCard',[_c('CCardHeader',[_c('h4',{staticStyle:{\"display\":\"inline-block\"}},[_vm._v(\"Income List\")]),_c('CButton',{staticStyle:{\"float\":\"right\"},attrs:{\"color\":\"success\"},on:{\"click\":function($event){return _vm.addItem('Income')}}},[_vm._v(\"Add Income\")]),_c('CCallout',{attrs:{\"color\":\"success\"}},[_c('h6',{staticClass:\"text-muted\"},[_vm._v(\"Total Income\")]),_c('strong',{staticClass:\"h4\"},[_vm._v(\"₹ \"+_vm._s(_vm.getIndianFormat(_vm.totalIncome)))])])],1),_c('CCardBody',[_c('CDataTable',{staticStyle:{\"min-height\":\"350px\"},attrs:{\"items\":_vm.filteredIncomeList,\"fields\":_vm.fields,\"column-filter\":false,\"items-per-page\":5,\"itemsPerPageSelect\":true,\"hover\":\"\",\"sorter\":\"\",\"pagination\":\"\",\"responsive\":\"\"},on:{\"filtered-items-change\":_vm.setCurrentItems},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',{staticClass:\"py-0\"},[_c('CButton',{directives:[{name:\"c-tooltip\",rawName:\"v-c-tooltip\",value:({\n                                            content:\n                                                '<strong>View</strong>',\n                                            placement: 'bottom'\n                                        }),expression:\"{\\n                                            content:\\n                                                '<strong>View</strong>',\\n                                            placement: 'bottom'\\n                                        }\"}],staticClass:\"m-1\",attrs:{\"color\":\"secondary\",\"square\":\"\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.viewBudgetDetails(item)}}},[_c('CIcon',{attrs:{\"name\":\"cil-file\"}})],1)],1)]}}])})],1)],1)],1),_c('CCol',[_c('CCard',[_c('CCardHeader',[_c('h4',{staticStyle:{\"display\":\"inline-block\"}},[_vm._v(\"Expense List\")]),_c('CButton',{staticStyle:{\"float\":\"right\"},attrs:{\"color\":\"danger\"},on:{\"click\":function($event){return _vm.addItem('Expense')}}},[_vm._v(\"Add Expense\")]),_c('CCallout',{attrs:{\"color\":\"danger\"}},[_c('h6',{staticClass:\"text-muted\"},[_vm._v(\"Total Expense\")]),_c('strong',{staticClass:\"h4\"},[_vm._v(\"₹ \"+_vm._s(_vm.getIndianFormat(_vm.totalExpense)))])])],1),_c('CCardBody',[_c('CDataTable',{staticStyle:{\"min-height\":\"350px\"},attrs:{\"items\":_vm.filteredExpenseList,\"fields\":_vm.fields,\"column-filter\":false,\"items-per-page\":5,\"itemsPerPageSelect\":true,\"hover\":\"\",\"sorter\":\"\",\"pagination\":\"\",\"responsive\":\"\"},on:{\"filtered-items-change\":_vm.setCurrentItems},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\n                                        var item = ref.item;\nreturn [_c('td',{staticClass:\"py-0\"},[_c('CButton',{directives:[{name:\"c-tooltip\",rawName:\"v-c-tooltip\",value:({\n                                            content:\n                                                '<strong>View</strong>',\n                                            placement: 'bottom'\n                                        }),expression:\"{\\n                                            content:\\n                                                '<strong>View</strong>',\\n                                            placement: 'bottom'\\n                                        }\"}],staticClass:\"m-1\",attrs:{\"color\":\"secondary\",\"square\":\"\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.viewBudgetDetails(item)}}},[_c('CIcon',{attrs:{\"name\":\"cil-file\"}})],1)],1)]}}])})],1)],1)],1)],1)],1),_c('CModal',{staticClass:\"disable-footer\",attrs:{\"title\":_vm.budget.type,\"show\":_vm.modal,\"centered\":\"\",\"fade\":\"\"},on:{\"update:show\":function($event){_vm.modal=$event}}},[_c('CForm',[_c('CSelect',{attrs:{\"horizontal\":\"\",\"label\":\"Category\",\"lazy\":false,\"value\":_vm.budget.category,\"options\":_vm.budget.type == 'Income'\n                        ? _vm.incomeCategoryOptions\n                        : _vm.expenseCategoryOptions,\"placeholder\":\"Please select a category\",\"disabled\":_vm.view},on:{\"update:value\":function($event){return _vm.$set(_vm.budget, \"category\", $event)}}}),_c('CInput',{attrs:{\"horizontal\":\"\",\"label\":\"Description\",\"lazy\":false,\"value\":_vm.budget.description,\"disabled\":_vm.view},on:{\"update:value\":function($event){return _vm.$set(_vm.budget, \"description\", $event)}}}),_c('CInput',{attrs:{\"horizontal\":\"\",\"label\":\"Amount\",\"lazy\":false,\"value\":_vm.budget.amount,\"prepend\":\"₹\",\"disabled\":_vm.view},on:{\"update:value\":function($event){return _vm.$set(_vm.budget, \"amount\", $event)}}})],1),_c('br'),_c('div',{staticClass:\"inactive-modal-response\",staticStyle:{\"float\":\"right\"}},[_c('CButton',{staticClass:\"m-1\",attrs:{\"type\":\"submit\",\"color\":\"primary\"},on:{\"click\":_vm.insertBudgetDetails}},[_vm._v(\"Submit\")]),_c('CButton',{staticClass:\"m-1\",attrs:{\"type\":\"submit\",\"color\":\"secondary\"},on:{\"click\":function($event){_vm.modal = false}}},[_vm._v(\"Cancel\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gql from 'graphql-tag';\r\n\r\nconst GET_CATEGORIES = gql`\r\n    query MyQuery {\r\n        budget_app_income_category(order_by: { sequence: asc }) {\r\n            category_name\r\n            sequence\r\n            id\r\n        }\r\n        budget_app_expense_category(order_by: { sequence: asc }) {\r\n            sequence\r\n            id\r\n            category_name\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_BUDGET_DETAILS = gql`\r\n    query($login_id: Int!) {\r\n        budget_app_budget_details(\r\n            order_by: { transaction_date: desc }\r\n            where: { login_id: { _eq: $login_id } }\r\n        ) {\r\n            amount\r\n            category\r\n            description\r\n            transaction_date\r\n            type\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_MONTHLY_SAVINGS = gql`\r\n    query($login_id: Int!) {\r\n        budget_app_monthly_savings_aggregate(\r\n            where: { login_id: { _eq: $login_id } }\r\n        ) {\r\n            aggregate {\r\n                sum {\r\n                    amount\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst INSERT_BUDGET_DETAILS = gql`\r\n    mutation(\r\n        $amount: Int!\r\n        $category: String!\r\n        $description: String\r\n        $type: String!\r\n        $login_id: Int!\r\n    ) {\r\n        insert_budget_app_budget_details(\r\n            objects: {\r\n                amount: $amount\r\n                category: $category\r\n                description: $description\r\n                type: $type\r\n                login_id: $login_id\r\n            }\r\n        ) {\r\n            returning {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst INSERT_MONTHLY_SAVINGS = gql`\r\n    mutation ($login_id: Int!, $amount: Int!) {\r\n        insert_budget_app_monthly_savings(\r\n            objects: { login_id: $login_id, amount: $amount }\r\n        ) {\r\n            returning {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// To be implemented\r\n// const UPDATE_BUDGET_DETAILS = gql``;\r\n\r\n// const DELETE_BUDGET_DETAILS = gql``;\r\n\r\nexport default {\r\n    GET_CATEGORIES,\r\n    GET_BUDGET_DETAILS,\r\n    GET_MONTHLY_SAVINGS,\r\n    INSERT_BUDGET_DETAILS,\r\n    INSERT_MONTHLY_SAVINGS\r\n};\r\n","<template>\r\n    <CCard>\r\n        <CCardHeader><h5>Budget Manager</h5></CCardHeader>\r\n        <CCardBody>\r\n            <CRow>\r\n                <CCol sm=\"1\">\r\n                    Filter:\r\n                </CCol>\r\n                <CCol sm=\"3\">\r\n                    <CSelect\r\n                        placeholder=\"Select a year\"\r\n                        :value.sync=\"selectedYear\"\r\n                        :options=\"yearOptions\"\r\n                    />\r\n                </CCol>\r\n                <CCol sm=\"3\">\r\n                    <CSelect\r\n                        placeholder=\"Select a month\"\r\n                        :value.sync=\"selectedMonth\"\r\n                        :options=\"monthOptions\"\r\n                    />\r\n                </CCol>\r\n                <CCol sm=\"1\">\r\n                    <CButton @click=\"applyFilter\" color=\"secondary\"\r\n                        >Apply</CButton\r\n                    >\r\n                </CCol>\r\n                <CCol sm=\"1\">\r\n                    <CButton @click=\"clearFilter\" color=\"dark\">Clear</CButton>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol col=\"12\" sm=\"6\">\r\n                    <CWidgetProgressIcon\r\n                        :header=\"`${getIndianFormat(totalBalance)}`\"\r\n                        text=\"Available Balance\"\r\n                        color=\"info\"\r\n                        :value=\"(totalBalance / totalIncome) * 100\"\r\n                    >\r\n                    </CWidgetProgressIcon>\r\n                </CCol>\r\n                <CCol col=\"12\" sm=\"6\">\r\n                    <CWidgetProgressIcon\r\n                        :header=\"`${getIndianFormat(totalSavings)}`\"\r\n                        text=\"Total Savings\"\r\n                        color=\"info\"\r\n                        :value=\"(totalBalance / totalIncome) * 100\"\r\n                    >\r\n                    </CWidgetProgressIcon>\r\n                </CCol>\r\n            </CRow>\r\n\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h4 style=\"display: inline-block\">Income List</h4>\r\n                            <CButton\r\n                                color=\"success\"\r\n                                style=\"float: right\"\r\n                                @click=\"addItem('Income')\"\r\n                                >Add Income</CButton\r\n                            >\r\n                            <CCallout color=\"success\">\r\n                                <h6 class=\"text-muted\">Total Income</h6>\r\n                                <strong class=\"h4\"\r\n                                    >₹\r\n                                    {{ getIndianFormat(totalIncome) }}</strong\r\n                                >\r\n                            </CCallout>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CDataTable\r\n                                :items=\"filteredIncomeList\"\r\n                                :fields=\"fields\"\r\n                                :column-filter=\"false\"\r\n                                :items-per-page=\"5\"\r\n                                :itemsPerPageSelect=\"true\"\r\n                                hover\r\n                                sorter\r\n                                pagination\r\n                                responsive\r\n                                @filtered-items-change=\"setCurrentItems\"\r\n                                style=\"min-height: 350px;\"\r\n                            >\r\n                                <template #action=\"{ item }\">\r\n                                    <td class=\"py-0\">\r\n                                        <CButton\r\n                                            color=\"secondary\"\r\n                                            square\r\n                                            size=\"sm\"\r\n                                            class=\"m-1\"\r\n                                            v-c-tooltip=\"{\r\n                                                content:\r\n                                                    '<strong>View</strong>',\r\n                                                placement: 'bottom'\r\n                                            }\"\r\n                                            @click=\"viewBudgetDetails(item)\"\r\n                                        >\r\n                                            <CIcon name=\"cil-file\" />\r\n                                        </CButton>\r\n                                    </td>\r\n                                </template>\r\n                            </CDataTable>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h4 style=\"display: inline-block\">Expense List</h4>\r\n                            <CButton\r\n                                color=\"danger\"\r\n                                style=\"float: right\"\r\n                                @click=\"addItem('Expense')\"\r\n                                >Add Expense</CButton\r\n                            >\r\n                            <CCallout color=\"danger\">\r\n                                <h6 class=\"text-muted\">Total Expense</h6>\r\n                                <strong class=\"h4\"\r\n                                    >₹\r\n                                    {{ getIndianFormat(totalExpense) }}</strong\r\n                                >\r\n                            </CCallout>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CDataTable\r\n                                :items=\"filteredExpenseList\"\r\n                                :fields=\"fields\"\r\n                                :column-filter=\"false\"\r\n                                :items-per-page=\"5\"\r\n                                :itemsPerPageSelect=\"true\"\r\n                                hover\r\n                                sorter\r\n                                pagination\r\n                                responsive\r\n                                @filtered-items-change=\"setCurrentItems\"\r\n                                style=\"min-height: 350px;\"\r\n                            >\r\n                                <template #action=\"{ item }\">\r\n                                    <td class=\"py-0\">\r\n                                        <CButton\r\n                                            color=\"secondary\"\r\n                                            square\r\n                                            size=\"sm\"\r\n                                            class=\"m-1\"\r\n                                            v-c-tooltip=\"{\r\n                                                content:\r\n                                                    '<strong>View</strong>',\r\n                                                placement: 'bottom'\r\n                                            }\"\r\n                                            @click=\"viewBudgetDetails(item)\"\r\n                                        >\r\n                                            <CIcon name=\"cil-file\" />\r\n                                        </CButton>\r\n                                    </td>\r\n                                </template>\r\n                            </CDataTable>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </CCardBody>\r\n        <CModal\r\n            :title=\"budget.type\"\r\n            :show.sync=\"modal\"\r\n            class=\"disable-footer\"\r\n            centered\r\n            fade\r\n        >\r\n            <CForm>\r\n                <CSelect\r\n                    horizontal\r\n                    label=\"Category\"\r\n                    :lazy=\"false\"\r\n                    :value.sync=\"budget.category\"\r\n                    :options=\"\r\n                        budget.type == 'Income'\r\n                            ? incomeCategoryOptions\r\n                            : expenseCategoryOptions\r\n                    \"\r\n                    placeholder=\"Please select a category\"\r\n                    :disabled=\"view\"\r\n                />\r\n                <CInput\r\n                    horizontal\r\n                    label=\"Description\"\r\n                    :lazy=\"false\"\r\n                    :value.sync=\"budget.description\"\r\n                    :disabled=\"view\"\r\n                />\r\n                <CInput\r\n                    horizontal\r\n                    label=\"Amount\"\r\n                    :lazy=\"false\"\r\n                    :value.sync=\"budget.amount\"\r\n                    prepend=\"₹\"\r\n                    :disabled=\"view\"\r\n                />\r\n            </CForm>\r\n            <br />\r\n            <div class=\"inactive-modal-response\" style=\"float: right\">\r\n                <CButton\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    class=\"m-1\"\r\n                    @click=\"insertBudgetDetails\"\r\n                    >Submit</CButton\r\n                >\r\n                <CButton\r\n                    type=\"submit\"\r\n                    color=\"secondary\"\r\n                    class=\"m-1\"\r\n                    @click=\"modal = false\"\r\n                    >Cancel</CButton\r\n                >\r\n            </div>\r\n        </CModal>\r\n    </CCard>\r\n</template>\r\n\r\n<script>\r\nimport queries from './queries';\r\n\r\nlet fields = [\r\n    { key: 'transaction_date' },\r\n    { key: 'amount' },\r\n    { key: 'category' },\r\n    {\r\n        key: 'action',\r\n        label: 'Action',\r\n        sorter: false,\r\n        filter: false\r\n    }\r\n];\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            fields,\r\n            currentItems: [],\r\n            selectedYear: new Date().getFullYear(),\r\n            selectedMonth: new Date().getMonth() + 1,\r\n\r\n            modal: false,\r\n            type: '',\r\n            budget: this.getEmptyForm(),\r\n            view: false,\r\n            render: true,\r\n\r\n            incomeCategoryOptions: [],\r\n            expenseCategoryOptions: [],\r\n            incomeList: [],\r\n            expenseList: [],\r\n            filteredIncomeList: [],\r\n            filteredExpenseList: [],\r\n\r\n            totalBalance: 0,\r\n            totalIncome: 0,\r\n            totalExpense: 0,\r\n            totalSavings: 0,\r\n\r\n            insertSavings: false\r\n        };\r\n    },\r\n    computed: {\r\n        yearOptions() {\r\n            return [\r\n                { label: '2020', value: 2020 },\r\n                { label: '2021', value: 2021 },\r\n                { label: '2022', value: 2022 },\r\n                { label: '2023', value: 2023 },\r\n                { label: '2024', value: 2024 },\r\n                { label: '2025', value: 2025 }\r\n            ];\r\n        },\r\n        monthOptions() {\r\n            return [\r\n                { label: 'January', value: 1 },\r\n                { label: 'February', value: 2 },\r\n                { label: 'March', value: 3 },\r\n                { label: 'April', value: 4 },\r\n                { label: 'May', value: 5 },\r\n                { label: 'June', value: 6 },\r\n                { label: 'July', value: 7 },\r\n                { label: 'August', value: 8 },\r\n                { label: 'September', value: 9 },\r\n                { label: 'October', value: 10 },\r\n                { label: 'November', value: 11 },\r\n                { label: 'December', value: 12 }\r\n            ];\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        getEmptyForm() {\r\n            return {\r\n                amount: 0,\r\n                category: '',\r\n                description: '',\r\n                type: ''\r\n            };\r\n        },\r\n\r\n        reset() {\r\n            this.budget = this.getEmptyForm();\r\n        },\r\n\r\n        setCurrentItems(val) {\r\n            this.currentItems = val;\r\n        },\r\n\r\n        addItem(type) {\r\n            this.reset();\r\n            this.modal = true;\r\n            this.budget.type = type;\r\n            this.view = false;\r\n        },\r\n\r\n        getIndianFormat(amount) {\r\n            if (amount != '') {\r\n                amount = amount.toString();\r\n                var lastThree = amount.substring(amount.length - 3);\r\n                var otherNumbers = amount.substring(0, amount.length - 3);\r\n                if (otherNumbers != '') lastThree = ',' + lastThree;\r\n                var res =\r\n                    otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, ',') +\r\n                    lastThree;\r\n                return res;\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        getBudgetDetails() {\r\n            return new Promise((resolve, reject) => {\r\n                this.$apollo\r\n                    .mutate({\r\n                        mutation: queries.GET_BUDGET_DETAILS,\r\n                        variables: {\r\n                            login_id: localStorage.getItem('login_id')\r\n                        }\r\n                    })\r\n                    .then(res => {\r\n                        let incomeList = [],\r\n                            expenseList = [];\r\n                        const result = res?.data?.budget_app_budget_details;\r\n                        if (result.length > 0) {\r\n                            for (const el of result) {\r\n                                if (el.type == 'Income') incomeList.push(el);\r\n                                else if (el.type == 'Expense')\r\n                                    expenseList.push(el);\r\n                            }\r\n                            this.incomeList = incomeList;\r\n                            this.expenseList = expenseList;\r\n\r\n                            this.filteredIncomeList = this.incomeList;\r\n                            this.filteredExpenseList = this.expenseList;\r\n\r\n                            this.getBudgetAmount(\r\n                                'Income',\r\n                                this.filteredIncomeList\r\n                            );\r\n                            this.getBudgetAmount(\r\n                                'Expense',\r\n                                this.filteredExpenseList\r\n                            );\r\n                            this.applyFilter();\r\n\r\n                            resolve();\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        reject();\r\n                    });\r\n            });\r\n        },\r\n\r\n        getBudgetAmount(type, list) {\r\n            let total = 0;\r\n\r\n            for (const el of list) {\r\n                total += el.amount;\r\n            }\r\n\r\n            if (type == 'Income') {\r\n                this.totalIncome = total;\r\n            } else if (type == 'Expense') {\r\n                this.totalExpense = total;\r\n            }\r\n\r\n            this.totalBalance = this.totalIncome - this.totalExpense;\r\n        },\r\n\r\n        getTotalSavings() {\r\n            this.$apollo\r\n                .mutate({\r\n                    mutation: queries.GET_MONTHLY_SAVINGS,\r\n                    variables: { login_id: localStorage.getItem('login_id') }\r\n                })\r\n                .then(res => {\r\n                    const result =\r\n                        res?.data?.budget_app_monthly_savings_aggregate\r\n                            ?.aggregate?.sum;\r\n                    if (result.amount > 0) {\r\n                        this.totalSavings = result.amount;\r\n                    }\r\n                });\r\n        },\r\n\r\n        insertBudgetDetails() {\r\n            this.$apollo\r\n                .mutate({\r\n                    mutation: queries.INSERT_BUDGET_DETAILS,\r\n                    variables: {\r\n                        ...this.budget,\r\n                        login_id: localStorage.getItem('login_id')\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    const result =\r\n                        res?.data?.insert_budget_app_budget_details?.returning;\r\n                    if (result[0].id > 0) {\r\n                        this.getBudgetDetails();\r\n                        this.getBudgetAmount('Income', this.filteredIncomeList);\r\n                        this.getBudgetAmount(\r\n                            'Expense',\r\n                            this.filteredExpenseList\r\n                        );\r\n                        this.modal = false;\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        },\r\n\r\n        // Insert previous month saving to db on every 1st of month\r\n        insertEachMonthSavings() {\r\n            console.log('entered');\r\n            this.$apollo\r\n                .mutate({\r\n                    mutation: queries.INSERT_MONTHLY_SAVINGS,\r\n                    variables: {\r\n                        login_id: localStorage.getItem('login_id'),\r\n                        amount: this.totalBalance\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    const result =\r\n                        res?.data?.insert_budget_app_monthly_savings?.returning;\r\n                    console.log(result);\r\n                    if (result[0].id > 0) {\r\n                        this.insertSavings = false;\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n\r\n        viewBudgetDetails(item) {\r\n            this.view = true;\r\n            this.budget = { ...item };\r\n            this.modal = true;\r\n        },\r\n\r\n        applyFilter() {\r\n            if (this.selectedYear != '' || this.selectedMonth != '') {\r\n                this.filteredIncomeList = this.incomeList;\r\n                this.filteredExpenseList = this.expenseList;\r\n\r\n                if (this.selectedMonth != '') {\r\n                    this.filteredExpenseList = this.filteredExpenseList.filter(\r\n                        el =>\r\n                            new Date(el.transaction_date).getMonth() + 1 ==\r\n                            this.selectedMonth\r\n                    );\r\n                    this.filteredIncomeList = this.filteredIncomeList.filter(\r\n                        el => {\r\n                            return (\r\n                                new Date(el.transaction_date).getMonth() + 1 ==\r\n                                this.selectedMonth\r\n                            );\r\n                        }\r\n                    );\r\n                    this.getBudgetAmount('Expense', this.filteredExpenseList);\r\n                    this.getBudgetAmount('Income', this.filteredIncomeList);\r\n                }\r\n                if (this.selectedYear != '') {\r\n                    this.filteredExpenseList = this.filteredExpenseList.filter(\r\n                        el =>\r\n                            new Date(el.transaction_date).getFullYear() ==\r\n                            this.selectedYear\r\n                    );\r\n                    this.filteredIncomeList = this.filteredIncomeList.filter(\r\n                        el =>\r\n                            new Date(el.transaction_date).getFullYear() ==\r\n                            this.selectedYear\r\n                    );\r\n                    this.getBudgetAmount('Expense', this.filteredExpenseList);\r\n                    this.getBudgetAmount('Income', this.filteredIncomeList);\r\n                }\r\n            }\r\n        },\r\n\r\n        clearFilter() {\r\n            this.selectedYear = new Date().getFullYear();\r\n            this.selectedMonth = new Date().getMonth() + 1;\r\n            this.filteredExpenseList = this.expenseList;\r\n            this.filteredIncomeList = this.incomeList;\r\n            this.getBudgetAmount('Expense', this.filteredExpenseList);\r\n            this.getBudgetAmount('Income', this.filteredIncomeList);\r\n        }\r\n    },\r\n    apollo: {\r\n        categoryData: {\r\n            query: queries.GET_CATEGORIES,\r\n            update: data => data,\r\n            result({ data }) {\r\n                this.update = false;\r\n                let incomeCategoryOptions = [],\r\n                    expenseCategoryOptions = [];\r\n                for (const el of data?.budget_app_income_category) {\r\n                    incomeCategoryOptions.push({\r\n                        label: el.category_name,\r\n                        value: el.category_name\r\n                    });\r\n                }\r\n                for (const el of data?.budget_app_expense_category) {\r\n                    expenseCategoryOptions.push({\r\n                        label: el.category_name,\r\n                        value: el.category_name\r\n                    });\r\n                }\r\n                this.incomeCategoryOptions = incomeCategoryOptions;\r\n                this.expenseCategoryOptions = expenseCategoryOptions;\r\n\r\n                this.getBudgetDetails()\r\n                this.getTotalSavings();\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExpenseManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExpenseManager.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExpenseManager.vue?vue&type=template&id=34f010a4&\"\nimport script from \"./ExpenseManager.vue?vue&type=script&lang=js&\"\nexport * from \"./ExpenseManager.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}